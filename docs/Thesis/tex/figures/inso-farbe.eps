%!PS-Adobe-3.0 EPSF-3.0
%%Title: (inso.psd)
%%Version: 1 4
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 21:18:10 02/04/06
%%For: (Johannes)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%ADO_ContainsXMP: MainFirst
%%BoundingBox: 168 292 427 551
%%HiResBoundingBox: 168.0 291.501 427.499 551.001
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Drucker-/PostScript-Farbmanagement 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
1 pop
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3667 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-702">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2006-02-04T21:18:10+01:00</xap:CreateDate>
         <xap:ModifyDate>2006-02-04T21:18:10+01:00</xap:ModifyDate>
         <xap:MetadataDate>2006-02-04T21:18:10+01:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:69F6495CBB95DA11820CF78ACDC0A233</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:69F6495CBB95DA11820CF78ACDC0A233</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:9f3d77f3-6eb4-4c7a-8baa-506ad7b75658</stRef:instanceID>
            <stRef:documentID>uuid:e4a93eda-4963-4a9a-9bf1-a440ef0c8997</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">inso.psd</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Johannes</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
168.0 291.501 259.5 259.5 rectclip
q
168.0 291.501 m
427.499 291.501 l
427.499 551.001 l
168.0 551.001 l
h
W
n
q
q
259.44 0.0 0.0 259.44 168.0 291.56 cm
q
n
0.0 0.0 1.0 1.0 re
[/Indexed [/DeviceCMYK] 2
<~^T43U)344f+nkg>~>]
cs 
<<
/ImageType 1
/Width 1081
/Height 1081
/ImageMatrix [1081.0 0.0 0.0 -1081.0 0.0 1081.0] 
/BitsPerComponent 8
/Decode [0.0 255.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /LZWDecode filter dup 
] >>
pdf_image J,g]g3$]7K#D>EP:q1$o*=mro@So+\<\5,H7Uo<*jE<[.O@Wn[3@'nb-^757;Rp>H
>q_R=AlC^cenm@9:1mM9jS"!dTMT<$3[GQ$8#0$s<4ZX!SPQ1`C/m<k<ioH)<bk^H
j`\=EYZP^B4!g3;B=(iZ<kDqOh/Bf.DHAorf'R[o?>ioWjnAY&^gM+`4=1jRLW!YA
=M/6)*KS9PE`kN%="Tc_Aoh+fk'&t\ctIN)4XQLiVpoI(>.nOW?*DmsG$@,,f58"P
DKf<uk4a;=i,EpG4sq/+a5h8d>eXi0S^6MAH<i_4=0:*@G'dN/kBFVsn9B=e3m\,V
kOa(K?GC-^h=(,dIU>=;fBr>1IXb_>kP+oS^^pnX!PjdJ%0OEX9GI`IODGpB_@V$%
#f;\)/ITH-bV]jIOR,+@`"<DH&]Be^f*TCC9N;hHO_e;>`Y"/@)9.f?,8<Vpb]OrH
OmIK<a:\o8+i#hNM'L+T9U-pGP&-[:a7;'\.E[gTXXhR-bdA_=;V\r=bS(E(1!Gh3
h_*.%9[u#FPAK&6_m;bi3R3him5rW-Cume*PO/64ckHmu4j[.[%7AMW9bdQQP[,;"
dM.Ze3)R&R/PFP,br$Zm[,!l@e.iE]%9'YT9iKRW9iUr<[9['>eeO/r<n:9QD-PU*
V.j2dQ0j!,b*Ce6@G$ktN>bo"4dBU3Q>A9dg").ZC"eX0Tk`<tc*_BAp>*E#g_L(*
E86d3buEJB4k4]2Pa0^@hA;1552Gt(m<d_(2=#YIQgO`#hfo&'J`)[a"+oJK:)+N%
pg+triYHiILuOf)/J@$P^,:o1O01:!j;AFrO5sFr9o<JL5#mm+R8-nOjqkI3R-'g=
c'd_Ic?3r9);]e6fid`oU$.d(KqdfM9jOOY>&Km-BpsLIWSQ3uWN5>"m\?lLRdBXJ
le;og4_i^mc*Pjq#19jGP.&oLmMh+M\*dJ'm=T5e^@f1s>L*&Zn.O=:_!mjF4i-XC
:DF4V*+'`,_&RA:amtMe,q&a5Y;M)Unp`I?oGB5C-D5bt9n2eUB1p_HQcE%8omLai
GkLXe$/,%hB58`bh9UM=n'jRKhtWN;G>9:[09pF"1b'+!qA,]a+JCu[X_.EM!Yt%u
Q8c._+@$I$mei@E^E0)@0@a>*n_,#VrY:dS*I[sKm8a.*Z6B,FPs=i!?ebO09gRpF
66cKg6CNDfb_\TP*3A'K?QsGQ$7PZbT\u=TK1[<qU@Kl?i<"U`W4EMV(ek$fEe,GH
Se`\u7Z/Ep/VZkq#cCQX%,o'>L$5Ii!$DF@@E_#2YjE)8fR-%q'M1tQ&W@:2I1aP*
8r?2X-6bF/'B2DYMb-r!U*t@%ie-!DEK/:3<8SGN"Bg\GXkQ1,q%r&o@=#2a3[@8-
LZ:dBND\7j5)@G9#ZPf);+<aj=5=tI>^;E.mR'Ot0cQg.:68?`0hCO\#Ga\#O]"qD
8U3H4A:uk(;GKhS3Bnt?,^2UrDGj'Z;(La5R>>mD;G(#_/1&.QPt5Lf93GOQAc`U2
8WGc'=Vi5.%*:gKm0h+jNA'End6P#m$VX]_1$#FaRn+H436A9[j%M_-F,^2pe8Hod
"PAsfP'.r#bqQ%`l'sORG0a+W44&*,Sl<pWcY<<X-5p3Ye*^mFq@%[__@3&8mX@fT
%n"ZS#shN#L/;%s5Nn7:Tl`&E^,do;h\?/b1fB?2C-ap0ap4\`EfRdn:IFA?e"q/l
3D\@94fO;AVKC7TdHYX7WQaJ%FRkVoq3=cS/FfX$[X(nf;+RGC6`G2DVb<J?J*N:l
L\3R*c)Rs/Wm+J4<HbQG"p%W%e@quKP%<,9)-CY(<3;=0[i_X/>&,."Qo3HAf6ZI`
CXfktLYfdIMUu6I7>#+$(;JLK&R?nCUobB/FP$sC-gXh5Z?B,]f./Kp/BRIfQ?(/O
q&O-EKd=!iWlJ:Vqe?d-S$d<hdb="oA7KG,[WN5:gM9)m&k/S)G4sf_]4"*F'sk6u
(*q[W:Md/hQ*n(V/_oV'Ec)o9\rfVN*fI:FDUmLP[fIXUX.sMb%H<.%FRrf8c['M/
1VK-DoA5D'Hst"c\eiqL?[M;OY3kkrQ?N%1pd9RMh?0?O(BZt8XamWTcbYu,$=NcF
KPm%-_O'EU8*hm`0I?_9E)u..lp6<p*!<_G6P*ZW7>bJJ/&V.jqbq<>#VCc^`g3q?
@sf;P?`#X"G_[5Jlmn/>egAF]0-`[h;3J4+.*8ZYd,V3_Mm;\KJJhN4AUJ8\ZIBAj
3En.Hb_qiq^15;'HRWQ^Tjk>TA^&h[2a>OFRe&.KcE@ksk8`TRl1TIQ3VPXK/G5[,
`I-"bs$0KL&Gl$"L!TT;8%Qk/U@`&W+M(WFA;N%-FNt95qJk<Am4kPSAu!k9b>W+,
6_uYEQ)jbR<,.r0XE3NqL)R['CCP7ClFsXV]%]%,pLg^Qk-`gq)8t$aKs:7tFP3*1
>p>i3Zm=e6g29ZYm<u6#[P$<V)g>i[NL./EjZ2)MIrK6Vd-,[SjkK[)GIM<s](]h(
co]e&msX<02l?Lj'W6=sSb8bf(:)Z!H[kLU"2\82);r.HKB^)n_PIT:iOg+bnTMl>
\=XJpY2>:#%RJ,0V]Fj#EeO!)7EF;G/(qQe_t&gVb.3^8T,bJ0o*<1Y>W4b,gqTA$
#+[jOk<8"RJ"nt5OjNpm7HpouF*+"=de]G_lFfQ]FY9uH-LY"#rF<%?I`'bu^L$9.
l=tJpa4WOYEUCH7Z1b?[bpI(@mJXr7[_D@h4+DGBXKl.+Y4pg9)e8BO"24I_'$6tO
L@G0ea0jeLj#fPdnuRF)q(F,W4PNs/^15:\Y<p7'n"0.MK@@4-;s?FEVY.$cRS:J)
m!Y5,@I[FLHG-YerRY$BZfg*>]UA89a2:3WpYU>r_t"];7/<H6epRaPoY*!'pHMf3
_nW,B5-NaS5C;bq:Ug+clnA89KCJkpA,<qni;EVcHbr#!q`f#kAUiJ0rm0a,7qh]j
<<'0"s6p#4:^!8L#lq/[!9R%.n*^2bU>Ko0APaNNDt*hS.U8ng!\bo%D@lth+TWhn
"407-c.rLl6@\K!"Rkpc7P+e*0a-u'"pMA`,?4rf9*YPt#=_2dMQesWI.NGMX:U'k
AiP4:_DMZf#mN;8m5?eY6Kdj/"u(q:j'<"rXQ(_u2A!6)VnP&c^1&Iq2K6ZF&BbL/
c=(MA%;8HFYh[81Y7<%_%M7jBOQR,=Ih'itbY[mAW_X.f!6%e7&8Ej0;%1at$P=j!
&J5l,E>K5PJJ'[_T!9:KXJlhp0V"7Y'5+ihYrm?[5nkm-'2_;h0h2r@M\RsGGO\fN
X\0AU@&hUc(271lnSE?QE>Kuu(NF]V&Si3K+UaEcZ135ZXtV0,OL<Js)/`.c0q=?1
Ri3Xj)KD_<EJYV'lP^ABNKL=^VZRn._!=k.*,DSpZ-8)F`>pSU*>-r:EO-\U%is'Y
]lE9XX5tDmn:e.!+(j1JZ2ET9ocPdr+E@b.n`(bVgE7+CCbckOY:UmF+V3!7,&5:F
Z7Qe(,pOfA+n@U-E]kZ9>pFAXIaUS/VNiFt;#!pC-#$^4;I!mU@4!Y2,a)hfZ=bNP
fcj7uf42oMj-GM,GVu:$-k_J!15.$RGpni(..Wlf;Nhti5mZTj.IsQ"&u$\8ZNme*
.e:521:AK,_DLhA/+UnC'#l41dPS8Q/FqU+8Q.$I=Y6r:0!]gV16c6Gk:<k*0<gio
Ej[S6\LOo`0XAeS;T1@(%ks1V0r%/h@SJT[7kTuG18?od6:ipD>klYa6ni70F$VW=
75T'Vo.rFn1@gj6FYp7r2"8+7F'1CWAN"UD2R>s/8\Hu1X#:W-g(SHZ65);aKfF.1
34"Rm1Of&HF@*)q3:#HZc>,A&SN:hk3jYqLlF-NM8M3=A3t0e'"QMMK]f^AX4L<8l
PJK+TQT$_44R=d_1NtlYh*,oE5-sW<o<g#gesu>a54bC21W)CTrBPH25dUsCn3TMS
PsA:YUpJN-'Dk)&,sl]&5-s2BPP7(9gHqoC6M&ktF?)`G77;3P6cp-*Je(8-q`kI1
4B,<LoO13A;aL#C703of9X+Y^nNo'P8$m\7o?g!jj!n#P75TOkY":@45tLX98[P#+
oP$\P=#3gH7+=(cFIu2_[7b:\85s@l.H*o6InJ5.9N8Pro[-A_HK*G48ok[hFIu6k
0h7JY::0C`1o!:"Ll0\"7hk%[FBqZ7"]0:I:[eT_'^&$:Ro%$>1\D&OocX-2o1JZ2
9qi"k'YQ_1ku'B!;md!2FN[Rhq,;CU<#!)HPs&,)<BRZ+VH"4)'i@K/>,,("<HW.Z
o5@UY@8CbY<]'bV<:rr8EEI@?2RR0#Zu&_5X&p)c7eM[Boq=9dNi5rb7.kst<Mojs
qcYkf>Hc:SMC2ON#u_C6<->BKe^7YTdp*W%>.#;RFCSN4?!R'Q?FB.Te_"n"`D./7
;_ru,<UX<R"Z[=h;"])ie_rt4jJQ!n@!3Q!lO@4ORO'ei;0E=Qp(LmN2.LE'@:q0!
@Kg#$F^3JuA!Ti"oXeA8"(:a9@l.1qeYul@;.auc":epC[TPK]93sM0>W,l"[Xi%V
?s;,H!#A!h2(_s3K5#Ls8JZ5Q(#<NRG@=O!?++<Y[]s97LC4l=3]<m)p9t;cIqpsa
?IltX1`'p!8SmmUD-"hsp!IW7$#$c.9o+('[c)-^<Gk1kD)T.?p8_P$a)>#c=EaJE
G,&g&'hO`&D&2Y\[inRl)REJVATnq]pEsj&#BDa`;jT7'2Z7[gJTLPtD:^jkocJ:6
@rXF2Dt_e%2@Xf\;0I'cF[Ou,24\4-,tN5kG*dVO2f(XdEG8JlFqqE,f7/'&[<O3a
FdHT^2iDm&:Ns:5HFJ$.<*OY"O*"ApH;p_e(Ti'AeTm(FHWB6UP^RqG=*YV$IC=EJ
eZEl$Z[.irI91?,pYC<U)h,uDDO(*G(0bj(omh8PGf0W-FiT"*7qWY&J=%@,GR\Ij
j['d2<`gSL(^5Kc2,j8.@i-RTGM,<lq0BJ;K6U*WfIq*J")0XgHMA:k(e]PWAN\U7
]smroeraL1.u&:o5^7&OGX#,/G?Yn^WAl\h\</i)It8G@H8kq<=<!)VV)d1pLA7<n
p]H71Vi,VMMRUi=R'hM_4&e/TMjVaOGeJnjs,=G!M>"W?37!U@@uWHLLKB=R(lNq=
nW$`I"8M+[=;d*bduQI7NYqYTn6M+H'8;`>JQQuT3<bN_-!FFXES/$Y)%DO,h/_/'
P'K2I=VYD1hiYEgDU#;EGs@QM>E!b@O;MDi[],OWGEY$eQEIi_Wr%tQA!RnHQPPF6
q/)KZ=-I^UNEM1+QN<CRj-H*eRC2RQ=1=IIZ^DV:RMM`fR@Tg!?^K@@MV.HffisV"
[@DM\S/F&A\KQMa91_&1Ql4#:m1#PO9:Zr-S61W<f:SYfiLb1>SjVb!R7W;3+.g%9
T:-3sRIQ*dNH^g!Qb!iXq5L%`,ft?1Egc0\H5i84M1V0@U3\r=3C>B$7qgQrPg^qR
qGEq)2gTbGMAe:>\lX\k4/FuPA%F.s=hSp'Dk";nVRh/L\otJBF,d]7V:o:SqN5>M
Ml'VnNnMsU>"tf=8Z=bM5Pekl3a7U?O$m*!])$cR]"j4BK7/&!W7ml5qQH:_B<4/H
QJ)S=R[]j-S#mTqPFAt_](&L?frdY;@_/8:H;C_+"\!adN1!+sR]!@_T;l*#Z*Y+C
3mFI)&T52]Z'uc>n56=_6(rU-Nr!mlpq_nN0r6ouYI[60Rhr=K'=<*@['M!aqFe-+
<OJ<1[DGS?g?GqI[BBC@VqZ&E4(4\,;lSKs\%;mSi^^Hs5Hqa]ZeLJC4-1^lQ)L0p
Y1oMXqV/S*6b7OJZl.2lHa0@CZm6U$K%mu*Hbm?U-bNnQ]X<7%qA#J=eXW,],MV%G
qjDg.YJ,=^^7m^'pYW_HZ+$4uT_nX3S,np<"_)h:^q9KFGOLl&j1pm.X1.u,r#M83
%O6?7U"gHgg`+-lJ&>r<\2tE4RG5)R7@Dq%,<S&_>3gWaji)L^`Md:PHXjR3q4Kia
`-`_Q>)0`&5>aMka18Or_Crn)@E(@e^O2$9glR3%EO]7NPl*8Xq,PQ]/'1a\_Sa\s
gp)-0Zm)$NX.4Z]),\U<&^4oEb'ZtKS5[FTe]iKfI(MDR>3EGDRBq;&c?T62L`=:e
F0ZaAcTM0Ah!.%+!O[=J]"DUq]ap>*!.b"OdCfk,I2UHnq9ipYc.rW5>mn]D2:Hse
X5*0ZHpbR%LR*?3e9pMp(:gNYGL\e4eTmM3]j8t_9>^X'_4=$+SM-Y+S_#u,f6k?S
4]TgSRFlqEQsDZpr6%Jj]nY=GfsnTGkNgUQ/^tdqg=c5T&!,6]%EMh?NI320f]Cm"
CT(K<5eX(O*;eP/H/2\1[2c6O4lsReNS9qM`#X?_SK5hcC#:pLhOXDt*R@&Xhom,J
Cn;*e$LQQWIGk&uhEDm2INR.oUY2.Pgq)%p4thaV1ZR<idlmfb3\f\:6\iBGi&dF`
I?WdKQf*<oOT&JG*;S\q%H2]`k-uGorOL>T3Q']Fjo/]OhJM3L(Z*s+b2(h:(cCLs
Fm*.Gj1]*[hM:A:YN]>Tf"R'g*foVhj6Bq=jZ]a/T!.2RZg:ejm%0^!?GjQB^YE/U
m?kBMh4oM7+_1Ktmap:`*@ob`KC%I@n(<cl*OYBCVsp;DnD=cBS0a5&TAk=oKjA]g
fCSMQ6g9d`o)CFm^GX&]3A6tHoCp5r52kDuA*4kFn@q\Nhbip8:%`u@Z9K<$s'bI=
qoGA\bJ#FWSh9[Q;>*4kp3s^B3Z7S)Km>n>otON%s&lqj?28^Oq7id%qsj*&IJY+c
iu`Ep?a'7^ZhYZ%qk(KOs/kRYDomLNllXLMs/Z%nZi!$X8RFX[+,Bi!j7PXUmU+ZJ
+ohXp5i@`+1`d57!(,Y+fN8J(&W&p8O]\ts0c>s?j,r!dIR,->8E>q:1nIPnPtL/$
flXr:0oNrHOI<K4EB/]s-^36Urd-]";!<uj"NliuV*l^G>'3#K5cI`JQ!1S%Z!"20
l]p2sI_fHt=R;>X24i30[9Dj\$["eh5I]G3P^6WlnLCEl0:,n&rrI\e@.9Og2BNNf
`FA/bgiVuoO3'\*f:99U6$p`9i0_a^ImKdUB_7a!2P1qYa^OjG\c-)IZ&IhQ\NNF>
EOjnCpRC"4-YnanE,V.MQQM9qia6p-hKM2XdHPcJ*4qgRX`!0>4.1P!B&D,.Gl4.?
2kQStm::WErnhqY9CMalhN,/'nbN-4li0b]f`*@<HfG/S0:W*;5EJh\#!oJ7T`dVW
"<sePn162[5k(Ld#K*e<57g46"?)d^&L/Ej6P34'%7KDB72SKKP\1mXd;j(;7dQp&
(!!:I>9+i+XG7ujZ89fL`UKC\UIUI=SruVW9TLYqZF$d`8Wha8/Mj\STeI_^Pe/\E
ZS]ub9f#c#2GLIcF!a.n%-ELBF*-k5:G^Mp5#8NWrkD*i/EJohW1<6?;)D8h7T$O8
+%St&'Zi[<e?olZdkoT6:/eOm53p=3N5&"bWab'd<AdcX<`QPLrA[Dl,u%%_'n("*
=#JNP?8^6&]1UY<%5D2A[Pa+V=Ys]"2qE-dl!ddrQ)AA#[^78k7og(k-e^Jl^MmF:
'up[5o$t3e8%/*4G$VS"hd+tk^!Ur@='ad4?T6O07G^mal$C5@^%m7f\2Fjpgt55G
JC)pi&VsmUQ6smad67Sc^,UQjNaoTm5=mPm2DL0&\DBN9AN<cdMaWs[9&sOY?>#^=
[^KBLjnXO?R:b.GJ"Tj<`$q6iD2*D1krMk388*1cSYJH]7[^8k]!Uq(5oMAMbA)@;
^T_N4eO<V03p"mrCg0rl[S7[a"0LqU^:guC]=..sm$;P6\O.=5n\B*+&e2=bgQ)-+
n,+7D`bi@=l,3$&cI9f(]XKOGjA[1oa_.-A1!k#)%j(H84R?4soNbO"Z#l%.:",rO
='=7#\2R[^FrcHAg%O7rIs6)HcZS'arD/"*GrXu?lZf!N:YtnRQ`">=NaJ@?UqVnh
mX)?cXQ"RJb"(jrh`&kVHk$\+nYAB&dJ//Lme*jRT5-1Ura4:O4T/!Tm!e#@r4g;Z
!E2)Z26[,^OiRb.TQC]NDpep+BGOnsC_241A]R.`roYE(#'fWP&OJ>-!Y&*9KB^qu
_FRf;=$.I3n9Pe3kV!=;Zo:f6BhC`@AkO;K3/A.MOI.pr%jC1`KlIGG7'efYR&ic5
jJ!a7aJfPVFA7W)7$C&!Wu#0n=#SH</L;6t(S`g"7hEM'7OZ8IU?$!J&*bi!jr#+H
!BuMujuk[peBVQ7G"bc!4ifUL*6`dYNmYR-8@O^)NYHu)"Em4)aXHOeEQjRY7#f;K
.jnU:QT29_9cH(r-`&X2PQfK'7bKdNj`??F.Y\:&32J'8I(+Q&`OsASBbog;\<meq
>opP%04Q8PQnp&jbVJ-*VD/dMZRTZHH'irUFO).07VU,UQShS:`L@'D?d6^6lK7V*
Q#Vh$:0H5o-TjC:PD/3q3SQ]%D!s\hJpBp:krks9UQ;MiCX4H]5Njm9T*Qcpc5I'V
k]=5+/O"SY\Ml`dI2?\k,b7\t[6nWH+'nMQ'%"1o8#ZY>>]bgCa''o2W3n%N%,-si
b"4DR1hfSsk+,G^GZnQ,$>d)TQHgq@RVD.ZW>-bV'e4\CQ3B.5eD1g<\uA\EZ<!s0
&^A]aL.piY>,q7MYuW\M<_O6?+k:`0<VGBS.s5d5#NE*73k%qd<",mh)S"D1q-Qm>
F"d4eLY$bS?=;T<Yne\*)Ckqp/8^'E[2$/Q].%<-[:cYMC)tjJ+@Kt,$F9A[d98<C
@nU*gZa<cT5^Q(<D0<%gkr,1n]'X6'[BYdY_VJG.>A9!qW4('Qe_BD8EGdXO\:p[8
>T7TiSLqmn(IkpiP0\1:AC.m4^5cKG\T_r`a!`iXbZVPnGHJcN]XN@_?G"kLDTh@?
21j+WS'IA#L$cVkk5AMAB21*SgqK`pmGFuOJSS9`^,<@pg"Z[GY[.ON(e44,Me;p+
rR\lY"K>f\3JVQ+'WKHo#M;^+L@Fma`>>!;^\eaOYoS&,\.9;64D=)$"e)Fc^B<K)
RuFVT5KF9Q)r<\uL$iP-^A/![A@BgGbRN.8q'-njbc-k3mS9pOP'Gj=V3/'l?d&u&
/6Ek1>&rafHMI@kk.K>eF$rg@YYQoVCqH#)DKjD82_gX=To,uoA^&ij6"i,KT'UWN
+d_4MP>)@YFE1d9et5?44=?WeL.TehB2)$(s(sL1,0kD]94H.#VY)jFZ8[OjA5,@\
Y?m.63hohn2^bMB[\$uS](Kh?)m)!k^PCO'3bsV*Y-O))K__ZVCqSMuD>o_!)Co?2
%&^Ei[_LMFqe0guD6%h<fA%="cYYZsS7(d8V7Q7dmOd,(2U0D!H(T!?S\Md\[_CSl
=*Wt8kHT66pYZs^I$SUGGB[)Pi&iAdE&,VQE!GB^3gYP?4Aj!(-P"$66XfH_.E?ME
(+aiC,Oq`DZFKWVi7sK$iZ79bFl+\(];(U34AX$+(F$@O+)(7@H'ilbV;HU6QqADG
c[%M\hm'A+6QTf&q:A.%))%VJ%WS%#*3/)U8$,c4Y;c8hroMlVV!EIif)%?Ila*?%
fR6,>4&!TW]q;iYm`.T(?V9^o6`9ZBq16,FrTHAY]'b%-hg@@XmITMEl0TA$[8iFS
^)tHlY7j77]RK@WQcf!hoAoiB'^t1^<V@F2j6^KAoDYTjq@^EjFVf\pSnHT#3.'ru
kH=6ERaZUZH&hiX$LrP.dW1t0juo'Eq%&P@'u+bF]\dJs+"-;1c^%VGDC#&L_m95*
\a=jj2"LV"cJoGMjh<t8r?"u/eNJcL4s*>i>=4t\TBQseWEK)tPN)Qpa8LMZ/&,97
57363lE7bRs1gqt^UU@0bMPOBdD(&3^lcQ#=KB5R"$d3Y^aof-iGLoZX$F7i^cW+C
,;DI+gqF.V523,&g]Bar'#B-45s"WqA!XOg`sL]^Yr!<6iKD"OWkf'b_41-a>TUa=
)*r$)5T9GaHdG)!!C&[k_N<EdppRgCYs<X[_JC[<iL%K/#=!"_6+_S4bATLZ0#Kt8
_PjHN$n"A7i'Q3U_ibBoq[GVjkJE*R_&PJQiIO@rrk]od\K!Q5F?IJ-6aYo0]Hf2I
<&;*"69A^;`'d1fj?LPp,t*sA7"dZj1eL1,5fD@F`4=[;MN5TU)FS[C`Dele$VS<0
7E%qO6-1uMgf;=tV*eF`6G([bR\Mpf>Jrp7ZnlSf;m8Y(?q*J.`G8@?He?1cgr8U#
7-nI(6t&KjBr"F$YI&+8Ug$<qAY;^pU5V7TluJ]ICW:/&7XO;g"#S%4F%-R[6tBCh
4;LC:pID<08(+S2CMHA0B17bc$*7<!r-cGHDo]KM7pG=MlrQU!K15us7Z9,j*(S(D
7`Z!o8C378P_$W&Fi,J]^"eUh,^r:s(I>-48HarC'DY3NQ`e8]\;YON</eSFQH8uh
ab6#%ko3(Gi^l7_8[P&01nKM>2S;GG7gsUa,Tb)^L.Xda7ahB1A>[2%VheTVW+;mF
"GP"*>KX_]9%6R-%!>27YJjbNb8QjBj?#u8Zp<uc8c5(!oP$jD\3is#8^$qOA@fH:
DG.pKa-;h/`19>]^I]E\a5"?pe=jf#ZH92g9N85i)^iguN65(0bC%FHr5M:'_akK6
7J+jKj8.!l)bgI.8]8WmPg[MJe&bOA4;>k$jKm*Q3R*5oc'6,j'Y@)HgWRg`ZHUlj
XP(j'cco/A79&'[']dKVg.=]`c;[0VA;j87hF]n^9dJu;Pj6;blcfk)boFMojO6j;
1/$D3:-@$$FRm_Qo<[N$b^B*.N8;g%8l##P:B]3A7$g]^[*O@lcV,<Sm(LU's3JXa
[$:[6%0Fg#rQmqr:X$.8b\0gpjA3/hd$4bmI0N@2hTPi/d+$@fj)%Wbj&!D^:sBTt
%*YMp-,YE#:pgj.9bp+`$-\A7:42n4eJ6K=/lBR@d&_CcKI0P2+2:5ecA`i?SJ9DP
"4BRo;H4r=Pp0)dk0Ilmb&n?+KbMbMW(tk5;Ua.DSJ]cpL/KTZ;`ukNSMJ,7hng*E
,/iltA%>N[8CFUs;S;<nANIXZ42g5?6Zk67I6gg),gt_$;Y9J-"S'o'6bT<]7)_Mc
PrVF,8(<1A<0U9Z'DkF=>1Cb;<8$6ZU]j`qK%17(<?!"/lgIfZNRQ-O^J._KF\F'>
E`J@6e4YBhPFU/d;UrsZ<MWJlC)PR@@)/%9aE:V#FZn%K51W*t<`E[1Uoi0oP1BeM
\FjRY?!AQXA(K-/<ohM+oPE*l(Y10W\`IhOok$J.F1I9Nf2JeQANAA+b#a4i=&!tN
7=*IsG<lsNfA1mVh-IO-?H9Hd:Xs,\,NMr!=BK,PcP58="bs[\LXsFk`AN%S`GF25
HW\7/<iiT/<=2Z1O1b.If8Y[;*KngpLtP3P=>Plf6eBg64BZ6_]:G3geWJ$dN[9sA
g!b<$jc8!CES)#$g)Gn&/YLegY$(pmg/XuZ9r?X0SCF[1e.&>0URp2G\6@lq<s>b[
Q)MFHb>_aG;5F4r-&5WmOP-am<,ILq4gqs[YGQ01+:YU1ZcQFgCKo=f>;a(K%DK7S
^V&[0<jf&/SZpm*MHiO4>+K/,9ugLcKj9VDfnDReFWStbbM2^!\\5N$[Ed4;l!6a-
WT*2Cjg<4-[Epe]?'X*+/_4#ef2:AQ;ru_=jkc,bgKCB.;Jk&_IG\?gj,e]I>D;$9
otfDejBdQ(OCdNZ*TgHuh,\sg?IeG(*U5ZhlWLW^;AJV,-1[(EmlI;n>ijsA`UdGZ
pPh?.49b4YPcW=Cpg;#<N@jrh(#n$I[9/t2hpqhd+N7^Jf&'F)>\-Z</dC6UJ(Z[N
?hF"t`J*6!$fK"cht702SH</-R,J(B6j+oC[9Lgl&E,pK73,92/*12'']FUCi>Nlp
<K^am(u`;g@@S$?/T9Ts*9$un@GFgeh?@7%+Q>\8iZ)gom;lZA,iXAoi`rKgRM<!O
.,r'2igd1+Xao8O/E6b,inV"PWXn+'0]PG]@i\NWFt_lN2jAbKf^\.b4ud&\!F&#'
cu'BS^-7jS3FQXgj/tUW-.Cf6$t,qrA1g<9k!3E+$KN6tA<f#[Q:,-S!9B_FQ];g2
Ak0O@+6;!LjR*:VI32c:9P"u=iKd5=XsTuW:h<[0fD[nn[QW_A=_5SrAS#=]otBIA
>il3o9I80K:0ZijA!C"aAT`B0IUm&5'kBHBAhCRUIVP.&?.N=7duJ&&[VjtD9'2F4
k,*'0+ZAI`)VP+-B.e>cA=@-0;dO?aB4cG?VIA<:s4r-6B;U+?^1biqC#?@JBGDoA
mQFDGI:s[Te1Op;%U3QeKkQ3pc5p0Q5)8?^Ms"tUB7>56c:)EdO6)sik\c:A%ZkB_
D!;^bk8'6F5*jg/NDa%5hS,%bG+.3PQr9eu=`,2C[[s\rS7JLABqBulp7eN,(hf5'
?OiZB2Q#L]TP@5qC0m?DG,jhVHX>!XANl#e[]\V%XC/K=B9"5%p6TDUSOuY&CG(0R
4sJQqVJBM(lY`P+XKcQ$]B[+bBi^"'B"VmH\a#Kllh7jT#-hnaY&#/Rln3g([`%M2
ChKoX>0aEiG(ja=Q0`D2l?:A:k032CUMT(UD"c3>p<_2VWbj)=m56Q_maUL(e^S3^
m<6$VKl6$YNU'Wuk!%F*#/kB0N,@^)mIoH)<nc.PgY,+UDC.I5%Z]g$jlfJ%lJC33
L>qJeS837kmEY"Y<p=B@\8LGHme4QdVXWdjn`l_/ml#I[7_s"Li,1Dqm$5QVVPrFu
qsVH#5F-obVUP!7IdbS_n.tEE(9h2,^tgWmE'FBmB*R`EJl+FYDt`/FpBPZGqqsQj
i(gcN<`8G%&)bJ:^1RoCf)"gT&91/EnIt5.-80<bQgmigi-,q)ebX5[s6@oJERjf'
U]tgVD=KKcn_YMIIicD7+6hYmkhdS)Aa&\A&9:7IndWV0D^sV1-c-*:m%3]]%g6/?
W8,S8DFI?==#"b<0=J>D^Gdt(V_[jN2KM=)h%fDJQI^#'"*9Hdo:>OD[Is(0Yj=;2
\q`-khDq/Z^2t/FF5?Z`Y1W?[%J3<2oHp?pmD3dkORCFc\F3#)eoY)N9A#"no[Tg\
?2j<]4$hFUFW3Yhj7%/ip@LjTee_6B7m>ok/oS3aookU4DP-Rl?M0@bp#fLtf3<4W
5O`#cFqr)A-P?&2'(s9Yl_e=e-T=F'PgSp=F\bAJURu^J(3Y0DEh3JXIr;]5Dt1##
mI'Q-LN@PZFE.%oncrk!(A[]GAbGM-p7FQgVF,R@<Hj3CpQm0!7h9cEJ%'?Di?r!e
(!?;aKK'cunqVeeQ[3\MH[(0Gpf8;Xa%uFNN:Vg`ZY,9VkD,kb@/1IUGpX_ZhcoYP
R/(Zb[V(ljs,QdXLO$@s1s_V"Vi]tpS95X=Gh7dmc\cc#Qg)hdq@c?ojt:rjMY]gq
pckU`a.bo0UMm&gG:0#/UT&RH2KIENqN"nXmAg$\?$aL0HQQsBpTjW;CNs1!G0\<T
hE^sZMYfMEqka2dkI\"&VX)R+qEKT&?b]_K][.1+HfpT?2fF%uNcrEOHeh2=n&G7F
a8%C!I$W(TYB'QI%X\L]A#GuFO3b1Wd.ZK=I4)K%2q.[pb^!jPG)*L"YJGX*F8^l_
r/Q.%=3>o'g\U["q<nE)pYOZ&gO9CJFTn[l-B8!_4F1)irX\,E^Wh2iao4NQrf`EA
J*LV^ki"JZI#$d3gFE.l]6$9fqOd?XkOEp0E,4=XI.,5X@f66jc[?o0I?3'2YN:$(
!/LUZ"Ts?B@*j-P!Yl)t6Xe@:KLQa`MFD"%GeaM/!!,T"dJ3p"73dseAC>`kVH#.3
`oAiMKZ4NAN_:_JH,Sif4.]5\e+s4PKgVS3B[h>s-C%#d9W?P:9[]b9Lf>kS#i.,@
>G>&2p%j'a\RVpJCt<r%VU]Ij>A_fgon)9?Wa0Mo42b%'Dn]8T2k1%@-%3X=E7fP-
-P_QZ:G;J^`S2\:aCHrKgr7,VQ-MXr=e,bP7AJ:FFP'99G-@+\7!2WP*hQ$'f@VnV
/]Qsr]A@IJ)bmEW>Jl3bG2"&207h-IjnV%<LI\2il:O'aaN"t$!:3^rh-5A9]._q6
4PkQXVq$4cGi9[W-b>l+p"B;Y/#Uk^qu2(pch^E6^Bbe:iP9/[o`-F;'Fo`-YZ)bO
_GH_M#!d,X>6^iV9IQUOd*ac]6a7V&'#_sm55@PTA3c'k;*&n8_6A;q)TL1;E5sbS
C\&:Dn`'3%7krIu+?M<*LEsu>>YQ(uEUtJ$4n9;SRn:u>OXeOPgpluKm_ke@b#!2Z
0#03s`urU41tae3c/cV$9Im3n1*SN%cQ^Z6S?k=Re,99\:+eBcW_[RZf0I]'I/?1V
e9rI9d;>umWR1#)'0oH:"WL"]eGVY';f,Mab#7lubu)iQ771,+eTsG[1R0G(9>iX"
5?UmLARSose9uG^<g,rG?;#GN8Rkiq?("[EPHBUQbr/P%A2CKeRr$hX`N6`+1Y%CW
ch?ZTCg2*Hd;%B6*PSQ'pD!RH=BC4*HJ[(ef-t"(I;N^jQ]hMm?MGQJ$/c:Vp4cq`
Uu-gZfCfT.i_G4Je_rJfhcs+4WonqBGlBtnj,1i/M;p"<6':+CejGbbcB_H*jJZ)q
Q;ST\/V[j4hK[E1$'&YeAE\J@I,$a5H_fn"5(<]K3Nc4akgkJ3V<ZdG\Yd$.IYNVk
[fpVQk1[hsZE9SF2m-!RXHU"N>@u-imSt%#*b[1g\q]PFG/I!f)kR/HaID=QP3Nr4
V6Fq:7g6p&ap-Z<D-S_38Fefbs2X_9g-Np&]Jf>8Dg1@@^MJ;\;:MC(o[V<*I*B4R
8H"<Dg?r72q3gc"f+Z#;3;7:Jn6Np8f5d>SHd[#M#DM=.4s]OUC7RL&]%rj2Sa>?B
JdK'`I2A'%FM0T-m<ma)XUoj8$5_+f?QY^-r`O`]7!E!I(&']&LU$[Tb@UOa7M>IQ
CZ0b]/cNN['X+/;@Ueg=r4lo!!Ze'EK$.m5^:.GA'[u;;cc-@0(!d(hS'ubf=q;ka
5mX/nb_2&6%Dm:,$<skDKs9BX_aLa<*]q#EE9[$_BQ4U4A1r7%:(!hr)Y@I&7#B8G
+<maW&g62oMC?an7/4-PU,3C1"P+[)W4s/nggsG>FofSVo`X%9.u_li,/n[B%j<`o
L2i(f`7X#iiQQP!nP/>g=ShKZKFs9.*^RH;HFm]=CLkdi5tHhXP2en+Og%GJ`n7UC
jPg$"Z8+:/L4plte=DiFk"i,T0,S4FA!HPu/k7.u#,GK-Q'*TRagkh4fn?Y0OjY^O
=?@V"XEKqo*>-GZUFP4j`0`=fA5*a=16rp(Nq0V@b\<n3chu9nP?D9dkbSo(jQ/Dn
GuDok*>75q\t%6^bg(nm3hEFuO>9:M:R3FhQ!D+ro4iTrM/+]@eHKJ^nDMJ]M[u\%
!hj]kK2EN\4e`Aa?W3):d"uBsW0JB>oOuk'WLiZ,]C1uK!fp6C9g"XkoU'_]OjZj%
9[,^O:3=&t;+U^V.A]0Z[+R.^M%`IVeNBb[*4/ZJThq':+APmVUfA*l;jP(HU@[>&
:<2a&.[=:.'iA,aC3MKa*!`FMEj&N,b>OJq9OY>[?.<W>>j@k@M\K@"dY`*>-iJ@o
Q2Rf9"m6K`m1>dFg)AQn!Fjf[Lkg-dX4Bn4A#QMCZ'J\:==+,PTiHu8(2Bl&lS3)%
c$Zh%H>M5Jf4ZZDU9p6!O]KD%>H5rL>dZoN=aO\6/Y[*_:^WUpRtOS>g'+sj`l]I'
h/Mdj-+Kkij/hR1?0nuD]$>KR1#"]tCmAqMBHH9kHc,oeH/#n_`pDBj?$P^IjZ?P7
/mJ)k?a"&6]U,I[g56+Q-G6jM\+9E(&j:T&N1m&TRU"^^"^8,S#/J_Hs%;VoK^ZV3
UNPSAh-8og(k)h/PtM=TS0*5q-4.RlI`u78=buE-VQVr-'O31gAFG,j_hQ&>@iBcS
dZ,ldGZalM*-HUJ\_ar3[bN$!jcHbgJB*M(rQ+4n=mk]P[!=eqA*O/LD,%%QfZPJE
9JL`GKseu8Nt^XQ)440:A'#SLHtIHUP;?3Qb6f.B[s[k?o>N*'RK#Nc*<i,.-ABh#
+%/`&o/uYOM:($55A:!AV"COLdb8&%BpdA9FB4p\>(7UX*C6Xs-Df5GT2]QpTqc>9
XOUL*n_ZK:XS&Huf%T"dA:%+Ln(tV(3lbTD*JL`k-H4V]rcIGmNM3cbbLtW7BPecd
TCta9f=OgFCu)A)p?(2cgOD4[STSt^#)M#<QZR,9e[kF&eYTl.G"l'6]Q^7GhV6pR
DXCZ+\&Ou]S+hGP*X0@KG5Rj,_h)33kJDIV%H6(QI8h4s`;$5FinRn"ELo&-pu`[X
ejfUXr^Fp(-RIj/T9OAf<Qb*=,3>?0Qua<[bk\.ok1nj"a_l+Dq<'p(h#F$h*eh0#
%n#R:+/F"MQ.#MA46>9WW-'/XeG?(ClIEnqFagaLqWD/Mh1)'hrk[7a-Y;Z#T<qN7
6/$ZuD=-/o\9A`DepEa+mbQd5GFjrL]@VK"h>b98*]`+?(PVA8+2iDlJ)*4gNUbji
aE\S[d<q:Go%m`tGCKq]I-7'lhLDL"^Hq)^-`-Ija3f3_<U0NqXl=f-f6\TNm/<`$
nXe@fH_5HKnhtC[T)[_r+*m3:(WH1,+4:!^On/Kac1,-kkC"GKo_Yi=qO_-]I@e.F
^=V3<hg_I#cb]DV-fsK_Mt;Cieb](@kl%-gpjX8XjZf+)rnlUheA(PQs6'@)NHkKM
!ru.%ZnH=tO:M@'&gGZX!Dj^9cgLmr*s,7cr@fGtO=p\HZNAK0"->S>E&RmG6Ng2/
";"'+cqa8<9*Gl."ckkO:g4,8@e)3[##K(>cO0r=D[0*^o1d71OFINH"U?`6#`sr@
E.&#=P6k"5#]Q+:d%9IjRgK_)$BCY`&??0MZO/Ci$W+GCd&cug^C3rYr:%6*OO"@G
8IA;C%?T;JY1F-0isnl>%++/Id-fs+!=ob9%uq(O0`)Cn!laSM&5`fHb_$D1%hVYS
c*.WhOWP2?h[D4a&s4Y9E@2CH1D8'd'2^h#OZ=*&6O[s#'N%L2:*12_;\`/2'p2]8
d9dY$@hqpS(6NAJd;Kg5Eu.\t(Qj%\d=2uFK,@I@(m0^nd>o.WP8R5a)3LC+d@V<h
UDd"-)Nh'=dB=K$ZPucN)j.`OdD$Y5_]2Oo*0JDadE`gFdiD<;*Kf(sdGGuWiuV(\
*g,b0dI/.ho,gj(+-HFBdJk=%"!CJH+Hd*TdLRK6'-U6i+d*cfdN9YG,9g#5,*FH#
dOugX1F#dV,Eb,5dQ\ui6R5Q",a(eGdSD.ljrbc~>

n
Q
Q
Q
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
